const months=['GENNAIO','FEBBRAIO','MARZO','APRILE','MAGGIO','GIUGNO','LUGLIO','AGOSTO','SETTEMBRE','OTTOBRE','NOVEMBRE','DICEMBRE'];const daysLabels=['lun','mar','mer','gio','ven','sab','dom'];const leftArrow=`<svg xmlns="http://www.w3.org/2000/svg" height="15" width="15" class="nav-style" viewBox="0 0 375.1 650.6"><style type="text/css">.st0{display:none;}.st1{fill:#FFFFFF;}.nav-style{transform:rotate(180deg);}</style><polygon class="st1" points="45.1 650.6 0 605.5 284.9 320.6 9.4 45.1 54.5 0 375.1 320.6"/></svg>`;const rightArrow=`<svg xmlns="http://www.w3.org/2000/svg" height="15" width="15" viewBox="0 0 375.1 650.6"><style type="text/css">.st0{display:none;}.st1{fill:#FFFFFF;}</style><polygon class="st1" points="45.1 650.6 0 605.5 284.9 320.6 9.4 45.1 54.5 0 375.1 320.6"/></svg>`;let lwCalendar;lwCalendar=function(events,options,date){this.options={disabledDays:[],headerContainer:'',showHeader:!0,showNav:!0,loadNewEvents:()=>events,};for(let property in options){if(options.hasOwnProperty(property)&&this.options.hasOwnProperty(property)){this.options[property]=typeof options[property]==='string'?options[property].toLowerCase():options[property]}}
    events?this.events=events:this.events={};this.current=new Date();this.current.month=this.current.getMonth();this.current.year=this.current.getFullYear();this.selected=this.current;if(date){this.selected=date}
    this.selected.month=this.selected.getMonth();this.selected.year=this.selected.getFullYear();this.selected.lastDayNumber=new Date(this.selected.year,(this.selected.month+1),0).getDate();this.selected.firstDayWeekDay=new Date(this.selected.year,(this.selected.month),1).getDay();this.selected.firstDayWeekDay===0?this.selected.firstDayWeekDay=6:this.selected.firstDayWeekDay--;this.selected.lastDayWeekDay=new Date(this.selected.year,(this.selected.month+1),0).getDay();this.selected.lastDayWeekDay===0?this.selected.lastDayWeekDay=6:this.selected.lastDayWeekDay--;if(this.selected.month===0){this.previous=new Date(this.selected.year-1,11,1)}else{this.previous=new Date(this.selected.year,(this.selected.month-1),1)}
    this.previous.lastDayNumber=new Date(this.previous.getFullYear(),(this.previous.getMonth()+1),0).getDate()};function createCalendar(calendar,element,adjuster){if(typeof adjuster!=='undefined'){let newDate=new Date(calendar.selected.year,calendar.selected.month+adjuster,1);calendar=new lwCalendar(calendar.events,calendar.options,newDate);element.innerHTML=''}
    let mainSection=document.createElement('div');mainSection.className+='cld-main';function createCalendarHeader(){let calendarHeader=document.createElement('div');calendarHeader.className+='cld-datetime';if(calendar.options.showNav){let leftArrowContainer=document.createElement('div');leftArrowContainer.className+='cld-nav cld-left';leftArrowContainer.addEventListener('click',function(){if(typeof calendar.options.loadNewEvents==='function'){calendar.events=calendar.options.loadNewEvents()}
        createCalendar(calendar,element,-1)});leftArrowContainer.innerHTML=leftArrow;calendarHeader.appendChild(leftArrowContainer)}
        let selectedMonthAndYear=document.createElement('div');selectedMonthAndYear.className+='today';selectedMonthAndYear.innerHTML=months[calendar.selected.month]+' '+calendar.selected.year;calendarHeader.appendChild(selectedMonthAndYear);if(calendar.options.showNav){let rightArrowContainer=document.createElement('div');rightArrowContainer.className+='cld-nav cld-right';rightArrowContainer.addEventListener('click',function(){if(typeof calendar.options.loadNewEvents==='function'){calendar.events=calendar.options.loadNewEvents()}
            createCalendar(calendar,element,1)});rightArrowContainer.innerHTML=rightArrow;calendarHeader.appendChild(rightArrowContainer)}
        if(calendar.options.headerContainer){document.getElementById(calendar.options.headerContainer).innerHTML='';document.getElementById(calendar.options.headerContainer).appendChild(calendarHeader)}else{mainSection.appendChild(calendarHeader)}}
    function addDaysNamesLabels(){let labels=document.createElement('ul');labels.className='cld-labels';for(let i=0;i<daysLabels.length;i++){let label=document.createElement('li');label.className+='cld-label';label.innerHTML=daysLabels[i];labels.appendChild(label)}
        mainSection.appendChild(labels)}
    function addDays(){function dayNumber(number){let numberElement=document.createElement('p');numberElement.className+='cld-number';numberElement.innerHTML+=number;return numberElement}
        function checkInactiveCurrentDay(number){let dataInformation=new Date();let currentDay=dataInformation.getDate();let numberElement=document.createElement('p');if(number===currentDay){numberElement.className+='cld-number not-current-today'}else{numberElement.className+='cld-number'}
            numberElement.innerHTML+=number;return numberElement}
        let days=document.createElement('ul');days.className+='cld-days';for(let i=0;i<(calendar.selected.firstDayWeekDay);i++){let day=document.createElement('li');day.className+='cld-day prev-month';let d=i%7;for(let q=0;q<calendar.options.disabledDays.length;q++){if(d===calendar.options.disabledDays[q]){day.className+=' disabled-day'}}
            let dataInformation=new Date();let currentMonth=dataInformation.getMonth();let number;if((calendar.selected.month-1)===currentMonth){number=checkInactiveCurrentDay((calendar.previous.lastDayNumber-calendar.selected.firstDayWeekDay)+(i+1))}else{number=dayNumber((calendar.previous.lastDayNumber-calendar.selected.firstDayWeekDay)+(i+1))}
            day.appendChild(number);days.appendChild(day)}
        for(let i=0;i<calendar.selected.lastDayNumber;i++){let day=document.createElement('li');day.className+='cld-day curr-month';let d=(i+calendar.selected.firstDayWeekDay)%7;for(let q=0;q<calendar.options.disabledDays.length;q++){if(d===calendar.options.disabledDays[q]){day.className+=' disabled-day'}}
            let number=dayNumber(i+1);for(let eventsCounter=0;eventsCounter<calendar.events.length;eventsCounter++){let eventDate=calendar.events[eventsCounter].eventDate;let currentDate=new Date(calendar.selected.year,calendar.selected.month,(i+1));if(eventDate.getTime()===currentDate.getTime()){number.className+=' event-day';let eventsContainer=document.createElement('span');eventsContainer.className+='event-box';for(let eventsSameDay=0;eventsSameDay<calendar.events[eventsCounter].title.length;eventsSameDay++){eventsContainer.innerHTML+=`<a href="${calendar.events[eventsCounter].link[eventsSameDay]}">${calendar.events[eventsCounter].title[eventsSameDay]}</a>`}
                number.appendChild(eventsContainer)}}
            day.appendChild(number);if((i+1)===calendar.current.getDate()&&calendar.selected.month===calendar.current.month&&calendar.selected.year===calendar.current.year){day.className+=' current-day'}
            days.appendChild(day)}
        let extraDays=13;if(days.children.length>35){extraDays=6}else if(days.children.length<29){extraDays=20}
        for(let i=0;i<(extraDays-calendar.selected.lastDayWeekDay);i++){let day=document.createElement('li');day.className+='cld-day next-month';let d=(i+calendar.selected.lastDayWeekDay+1)%7;for(let q=0;q<calendar.options.disabledDays.length;q++){if(d===calendar.options.disabledDays[q]){day.className+=' disabled-day'}}
            let dataInformation=new Date();let currentMonth=dataInformation.getMonth();let number;if((calendar.selected.month+1)===currentMonth){number=checkInactiveCurrentDay(i+1)}else{number=dayNumber(i+1)}
            day.appendChild(number);days.appendChild(day)}
        mainSection.appendChild(days)}
    element.appendChild(mainSection);if(calendar.options.showHeader){createCalendarHeader()}
    addDaysNamesLabels();addDays()}
function initLwCalendar(element,data,settings){let obj=new lwCalendar(data,settings);createCalendar(obj,element)}